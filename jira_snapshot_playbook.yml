---
- name: Provision Hetzner Server from Snapshot and Restart Docker Containers
  hosts: localhost
  gather_facts: false
  vars:
    hcloud_token: "{{ lookup('env', 'HCLOUD_TOKEN') }}"
    server_name: "jira-server"
    server_type: "cpx41" # Adjust server type as needed
    snapshot_id: "167847808" # Replace with your snapshot ID
    ssh_key: "{{ lookup('env', 'SSH_KEY_NAME') }}"

  tasks:
    - name: Create Hetzner Cloud Server from Snapshot
      hetzner.hcloud.hcloud_server:
        api_token: "{{ hcloud_token }}"
        name: "{{ server_name }}"
        server_type: "{{ server_type }}"
        image: "{{ snapshot_id }}"
        ssh_keys: "{{ ssh_key }}"
        state: present
      register: hcloud_server

    - name: Debug hcloud_server variable
      debug:
        var: hcloud_server

    - name: Remove old SSH host key
      known_hosts:
        path: /home/mahrezbh/.ssh/known_hosts
        name: "{{ hcloud_server.hcloud_server.ipv4_address }}"
        state: absent

    - name: Add new SSH host key
      shell: ssh-keyscan -H {{ hcloud_server.hcloud_server.ipv4_address }} >> /home/mahrezbh/.ssh/known_hosts
      ignore_errors: true

    - name: Wait for SSH to be available
      wait_for:
        host: "{{ hcloud_server.hcloud_server.ipv4_address }}"
        port: 22
        delay: 20
        timeout: 600
        state: started

    - name: Verify SSH connection manually
      shell: ssh -o StrictHostKeyChecking=no root@{{ hcloud_server.hcloud_server.ipv4_address }} echo "SSH is up"

    - name: Add new server to inventory
      add_host:
        name: jira-server
        ansible_host: "{{ hcloud_server.hcloud_server.ipv4_address }}"
        ansible_user: root

    - name: Refresh inventory
      meta: refresh_inventory

- name: Restart Docker Containers on new server
  hosts: jira-server
  become: true
  tasks:
    - name: Check if Docker is installed
      command: docker --version
      register: docker_version
      failed_when: docker_version.rc != 0
      changed_when: false

    - name: Debug Docker version
      debug:
        var: docker_version.stdout

    - name: Restart Jira Docker container
      shell: docker restart jira
      register: restart_jira
      ignore_errors: true

    - name: Debug Jira restart result
      debug:
        var: restart_jira

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Configure Nginx as a reverse proxy for Jira
      copy:
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;

              server_name _;

              location / {
                  proxy_pass http://localhost:8080;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        dest: /etc/nginx/sites-available/jira
        mode: "0644"

    - name: Enable Nginx configuration
      file:
        src: /etc/nginx/sites-available/jira
        dest: /etc/nginx/sites-enabled/jira
        state: link

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
